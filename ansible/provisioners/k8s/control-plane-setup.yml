---
- name: Initialize Kubernetes master with kubeadm init
  command: >
    kubeadm init \
    --pod-network-cidr=192.168.0.0/16 \
    --upload-certs \
    --control-plane-endpoint=kloadbalancer1.psilva.org
  register: kubeadmin_init

- name: Print the init output to screen.
  debug:
    var: kubeadmin_init.stdout

- name: Save output to ~/kube-join.txt
  copy: content="{{ kubeadmin_init.stdout }}" dest=~/kube-join.txt

- name: Ensure .kube directory exists.
  file:
    path: ~/.kube
    state: directory
    mode: 0755

- name: Symlink the kubectl admin.conf to ~/.kube/conf.
  file:
    src: /etc/kubernetes/admin.conf
    dest: ~/.kube/config
    state: link
    mode: 0644

- name: Configure Calico networking.
  command: "{{ item }}"
  with_items:
    - kubectl apply -f https://projectcalico.docs.tigera.io/manifests/tigera-operator.yaml
    - kubectl apply -f https://docs.projectcalico.org/manifests/custom-resources.yaml
  register: calico_result
  changed_when: "'created' in calico_result.stdout"

- name: Create MetalLB configs file
  file:
    path: "/tmp/metallb-config.cm"
    state: touch

- name: Append MetalLB configs
  lineinfile:
    path: /tmp/metallb-config.cm
    insertbefore: EOF
    line: |
      apiVersion: v1
      kind: ConfigMap
      metadata:
        namespace: metallb-system
        name: config
      data:
        config: |
          address-pools:
          - name: default
            protocol: layer2
            addresses:
            - 192.168.50.40-192.168.50.120
  
- name: Configure Metal LoadBalancer
  command: "{{ item }}"
  with_items:
    - kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.11.0/manifests/namespace.yaml
    - kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.11.0/manifests/metallb.yaml
    - kubectl create -f /tmp/metallb-config.cm
    - kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey="$(openssl rand -base64 128)"
  register: metallb_result
  changed_when: "'created' in metallb_result.stdout"


